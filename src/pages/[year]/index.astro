---
import Layout from "../../layouts/Main.astro";
import ArchivePost from "../../components/ArchivePost.astro";
import type {GetStaticPaths} from 'astro';
import {getActivePostsCollection, type Post} from "../../utils/utils";

export const getStaticPaths = (async () => {
    const posts = await getActivePostsCollection(true, false);

    let archive = [];
    posts.forEach(post => {
        let record = archive.find(a => a.params.year === post.data.year);
        if (!record) {
            record = {
                params: {year: post.data.year},
                props: {posts: []}
            };
            archive.push(record);
        }
        record.props.posts.push(post);

        return record;
    });

    return archive;
}) satisfies GetStaticPaths;

interface Props {
  posts: Post[];
}

interface Params {
  year: string;
}

const {posts} = Astro.props as Props;
const {year} = Astro.params as Params;

const meta_description = `Explore our blog archive for the year ${year}. Discover all posts published in ${year}, organized by month. Dive into our past articles and insights from ${year}.`;
---
<Layout title={`${year} Archive`} meta_description={meta_description}>
    <div class="archive archive--year">
        <h1 class="archive__title">Archive: {year}</h1>
        <div class="archive__posts">
            {posts.map((post, index) => {
                const lastmonth = index > 0 ? posts[index - 1].data.monthname : null;
                const month = post.data.monthname;
                const url = `/${post.data.year}/${post.data.month}/`;
                return (
                        <ArchivePost post={post} last={lastmonth} current={month} groupurl={url} />
                );
            })}
        </div>
    </div>

</Layout>
